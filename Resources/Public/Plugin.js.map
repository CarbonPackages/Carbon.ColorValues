{
  "version": 3,
  "sources": ["../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.5/node_modules/@neos-project/neos-ui-extensibility/src/readFromConsumerApi.ts", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.5/node_modules/@neos-project/neos-ui-extensibility/src/shims/vendor/react/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.5/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/neos-ui-decorators/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.5/node_modules/@neos-project/neos-ui-extensibility/src/shims/neosProjectPackages/react-ui-components/index.js", "../../node_modules/.pnpm/@neos-project+neos-ui-extensibility@8.3.5/node_modules/@neos-project/neos-ui-extensibility/src/index.ts", "../Private/Editor/ColorValuesEditor/index.js", "../Private/Editor/manifest.js"],
  "sourcesContent": [null, null, null, null, null, "import React from \"react\";\nimport { neos } from \"@neos-project/neos-ui-decorators\";\nimport { IconButton } from \"@neos-project/react-ui-components\";\nimport style from \"./style.module.css\";\n\nconst neosifier = neos((globalRegistry) => ({\n    i18nRegistry: globalRegistry.get(\"i18n\"),\n    config: globalRegistry.get(\"frontendConfiguration\").get(\"Carbon.RangeEditor\"),\n}));\n\nconst defaultProps = {\n    options: {\n        allowEmpty: true,\n        disabled: false,\n        placeholder: null,\n        resetLabel: \"Reset\",\n    },\n};\n\nfunction Editor(props) {\n    const onReset = () => {\n        props.commit(\"\");\n    };\n\n    const options = { ...defaultProps.options, ...props.options };\n    const { commit, value, highlight, i18nRegistry } = props;\n    const { disabled, values } = options;\n\n    const previewBoxAttributes = (value, highlight, placeholder) => {\n        const hasValue = value && Object.prototype.hasOwnProperty.call(values, value);\n        const color = hasValue ? values[value].color : placeholder;\n        const title = hasValue ? i18nRegistry.translate(values[value].label) : null;\n        const classNames = [style.feedback];\n\n        if (value == \"transparent\" || (!hasValue && placeholder == \"transparent\")) {\n            classNames.push(style.transparent);\n        }\n\n        if (!hasValue && !placeholder) {\n            classNames.push(style.checkboard);\n        }\n\n        if (highlight) {\n            classNames.push(style.highlight);\n        }\n\n        return {\n            className: classNames.filter((item) => !!item).join(\" \"),\n            style: { backgroundColor: color },\n            title,\n        };\n    };\n\n    if (!values) {\n        return <div className={style.error}>No color values defined, please add them to your YAML configuration</div>;\n    }\n\n    const allowEmpty = options.allowEmpty || Object.prototype.hasOwnProperty.call(values, \"\");\n    const valueArray = [];\n\n    for (const key in values) {\n        const item = values[key];\n        valueArray.push({\n            label: i18nRegistry.translate(item.label),\n            color: item.color,\n            disabled: item.disabled,\n            key,\n        });\n    }\n\n    const fixedButton = valueArray.length > 9;\n\n    return (\n        <div className={options.disabled && style.disabled}>\n            <div className={style.wrapper}>\n                <div {...previewBoxAttributes(value, highlight, options.placeholder)}></div>\n                {allowEmpty && (\n                    <div className={style.reset}>\n                        <IconButton\n                            style=\"lighter\"\n                            icon=\"times\"\n                            title={i18nRegistry.translate(options.resetLabel)}\n                            onClick={onReset}\n                        />\n                    </div>\n                )}\n            </div>\n            <div className={style.list}>\n                {valueArray.map((item, index) => {\n                    return item.color ? (\n                        <button\n                            key={index}\n                            className={[\n                                style.item,\n                                item.color == \"transparent\" && style.transparent,\n                                fixedButton && style.itemFixed,\n                            ]\n                                .filter((item) => !!item)\n                                .join(\" \")}\n                            disabled={item.disabled}\n                            style={{ backgroundColor: item.color }}\n                            title={item.label}\n                            onClick={() => commit(item.key)}\n                        ></button>\n                    ) : (\n                        <div key={index} className={style.label}>\n                            {item.label}\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n\nexport default neosifier(Editor);\n", "import manifest from \"@neos-project/neos-ui-extensibility\";\n\nimport ColorValuesEditor from \"./ColorValuesEditor\";\n\nmanifest(\"Carbon.ColorValues:Editor\", {}, (globalRegistry) => {\n    const editorsRegistry = globalRegistry.get(\"inspector\").get(\"editors\");\n\n    editorsRegistry.set(\"Carbon.ColorValues/Editor\", {\n        component: ColorValuesEditor,\n    });\n});\n"],
  "mappings": "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",
  "names": ["readFromConsumerApi", "key", "args", "init_readFromConsumerApi", "__esmMin", "require_react", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_neos_ui_decorators", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "require_react_ui_components", "__commonJSMin", "exports", "module", "init_readFromConsumerApi", "readFromConsumerApi", "init_readFromConsumerApi", "dist_default", "readFromConsumerApi", "import_react", "import_neos_ui_decorators", "import_react_ui_components", "neosifier", "globalRegistry", "defaultProps", "Editor", "props", "onReset", "options", "commit", "value", "highlight", "i18nRegistry", "disabled", "values", "previewBoxAttributes", "placeholder", "hasValue", "color", "title", "classNames", "style_default", "item", "React", "allowEmpty", "valueArray", "key", "fixedButton", "index", "ColorValuesEditor_default", "dist_default", "globalRegistry", "ColorValuesEditor_default"]
}
